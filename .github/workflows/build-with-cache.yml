name: build-with-cache

on:
  workflow_dispatch:
    inputs:
      targets:
        description: 'Targets to build'
        required: true
        default: 'all'
      tool_chain_version:
        description: 'Tool chain version'
        required: false
        default: 'stable'
      tag:
        description: 'remark'
        required: false
        default: '-beta'
      cache_tag:
        description: 'cache-tag'
        required: false
        default: '-base'

jobs:
  set_matrix:
    runs-on: ubuntu-22.04
    outputs:
      targets_json: ${{ steps.set_targets.outputs.targets_json }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse and Find Dockerfiles for Targets
        id: set_targets
        run: |
          TARGETS="${{ github.event.inputs.targets }}"
          if [[ "$TARGETS" == "all" ]]; then
            # Find all Dockerfile paths and extract the architecture part (e.g., aarch64-apple-darwin)
            TARGETS=$(find Dockerfiles -type f -name 'Dockerfile.*' | grep -v 'Dockerfile.cross-base' | sed -E 's|.*/Dockerfile\.||' | paste -sd ',')
          fi
          TARGETS_JSON=$(echo "[\"${TARGETS//,/\",\"}\"]")
          echo "targets_json=$TARGETS_JSON" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Chmod +x for script
        run: chmod -R +x script/

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ secrets.GHCR_USERNAME }}/:latest
          cache-from: type=registry,ref=user/app:buildcache
          cache-to: type=registry,ref=user/app:buildcache,mode=max

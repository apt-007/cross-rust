name: build-docker-image
on:
  workflow_dispatch:
    inputs:
      targets:
        description: 'Targets to build'
        required: true
        default: 'all'
      tag:
        description: 'Tag for the image'
        required: false
        default: 'latest'


jobs:
  set_matrix:
    runs-on: ubuntu-22.04
    outputs:
      targets_json: ${{ steps.set_targets.outputs.targets_json }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse and Find Dockerfiles for Targets
        id: set_targets
        run: |
          TARGETS="${{ github.event.inputs.targets }}"
          if [[ "$TARGETS" == "all" ]]; then
            # Find all Dockerfile paths and extract the architecture part (e.g., aarch64-apple-darwin)
            TARGETS=$(find Dockerfiles -type f -name 'Dockerfile.*' | sed -E 's|.*/Dockerfile\.||' | paste -sd ',')
          fi
          TARGETS_JSON=$(echo "[\"${TARGETS//,/\",\"}\"]")
          echo "targets_json=$TARGETS_JSON" >> $GITHUB_OUTPUT
  

  build:
    needs: set_matrix
    runs-on: ubuntu-22.04
    continue-on-error: true
    strategy:
      matrix:
        target: ${{ fromJson(needs.set_matrix.outputs.targets_json) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Chmod +x for script
        run: chmod -R +x script/

      - name: Build Base Image
        run: |
          docker build -t cross-base:latest -f Dockerfiles/Dockerfile.cross-base .

      - name: Generate image name
        run: |
          IMAGE_NAME=${{ matrix.target }}:${{ github.event.inputs.tag }}
          DOCKERFILE=$(find Dockerfiles/*/*/*${{ matrix.target }} -name 'Dockerfile.*')
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "DOCKERFILE=$DOCKERFILE" >> $GITHUB_ENV

      - name: Build (${{ matrix.target }})
        run: |
          docker build -t ${{ env.IMAGE_NAME }} -f ${{ env.DOCKERFILE }} .

      - name: Push to ghcr.io
        run: |
          docker tag ${{ env.IMAGE_NAME }} ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ env.IMAGE_NAME }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ env.IMAGE_NAME }}

      - name: Push to DockerHub
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
